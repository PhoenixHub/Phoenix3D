// PX2Edit.hpp

	class Edit
	{
		// SINGLETON
	
	public:
		bool Initlize();
		bool Terminate();
		void Reset();
		
	public:
		enum EditType
		{
			ET_SCENE,
			ET_TERRAIN,
			ET_UI,
			ET_SIMULATE,
			ET_PLAY,
			ET_MAXTYPE
		};
		void SetEditType(EditType type);
		EditType GetEditType() const;
		bool CanDoEdit() const;

		enum EditAxisMode
		{
			EAM_WORLD,
			EAM_LOCAL,
			EAM_PARENT,
			EMA_MAX_MODE
		};
		void SetEditAxisMode(EditAxisMode mode);
		EditAxisMode GetEdtiAxisMode() const;

		enum EditMode
		{
			EM_NONE,
			EM_SELECT,
			EM_TRANSLATE,
			EM_ROTATE,
			EM_SCALE,
			EM_MAX_MODE
		};
		void SetEditMode(EditMode mode);
		EditMode GetEditMode() const;
		
		// Pick
	public:
		void SetPickPos(const APoint &pos);
		const APoint &GetPickPos() const;
		APoint GetPickLocalPos(Movable *nodeParent);
		
		// Select
	public:
		bool DeleteSelection();
		
	public:
		const std::string &GetSelectedResDir() const;
		const SelectResData &GetSelectedResource() const;	
		
		// Copy
	public:
		void SetCopyObject(Object *obj);
		Object *GetCopyObject();
		void PasteCopyedObject();
		void CloneSelectedObject();

		// anim
	public:
		void AnimResetPlay();
		void AnimPlay();
		void AnimStop();
		void AnimReset();
		
		bool IsAnimPlaying();
		void AnimPlayStop();
		
		// time line
	public:
		void MakeSelectTimeLineEdit();
		void TimeLine_UIGroup_Delete();
		void TimeLine_UIGroup_DeleteAll();
		
		// BluePrint
	public:
		void CreateBPPackage();
		void CreateBPFile();
		void CreateBPModule(const std::string &className, const std::string &funName);
		void CreateBPEvent(const std::string &spaceName, const std::string &eventName);
		void CreateBPOption(const std::string &optionName);
		void CreateBPOperator(const std::string &operatorName);
		void CreateBPParam(const std::string &paramName);
		void CompileBP();
		void DisconnectParam();
	};